root用户登录sudo -s
显示目录内容ls
ls -l显示当前目录所有文件的详细信息
cd 改变工作目录
mkdir创建目录
rmdir删除目录命令
touch建立文件或更新文件的修改日期
gedit编辑文件
cat创建和显示文件内容
cp文件或目录复制
mv用于移动文件和更名文件
rm删除文件或目录 rm -rf
pwd用于显示用户当前所在的目录
tar解压缩命令
chown用于改变文件或者目录的访问权限。可读r，可写w，可执行x。三种不同类型的用户对文件访问：文件所有者u，同组用户g，其他用户o
  r=4，w=2，x=1
若要rwx属性则4+2+1=7
rw-                6
r-x                5
shutdown退出系统
passwd修改用户口令passwd 用户名
su 改变用户权限
who 查看当前在线用户
ps 查看进程  ps-x查看自己的
kill终止后台进程 kill -9 

退出vim
:q! 离开vim，放弃刚才编辑的内容
:wq 存盘并退出
:set nu 显示行号
:set nonu取消行号

在命令模式下
x：删除光标后的字符
X：删除光标前的字符
dd：删除当前行
u：恢复刚才被修改的文本
/name 查找光标后名为name的字符串
s: 删除所在的字符，同时进入输入模式
yy复制当前光标所在的行
p：粘贴复制的内容在光标所在的行

G：光标移动到文件尾
gg：光标移动到文件开头

gcc编译
gcc -c 只执行到预编译。
gcc file.c生成a.out
gcc file.c -o file 生成file
编译多个文件
gcc -c message.c生成message.o 的文件，其包含连接到一个较大程序的已编译目标代码
gcc -c main.c生成main.c的文件
gcc -o goodbye message.o main.o生成可执行文件goodbye
直接用这个命令gcc -o goodbye1 message.c main.c

makefile一般结构
target...:dependency...
  command...
1、target，一个目标文件，可以是object，也可是执行文件。还可以是标签label
2、dependency，依赖，要生成目标文件target所依赖哪些文件
3、command命令，创建目标时，需要运行的shell命令（每行的缩进必须要tab而不能使用多个空格）
如果依赖文件中有一个比目标文件要新的话，shell命令所定义的命令就会被执行
#this makefile just is aexample.
test.o:test.c test.h
	gcc -c test.c
	
test.o:test.c test.h
	gcc -c test.c
clean:
	rm -f *.o



